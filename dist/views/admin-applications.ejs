<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Seller Applications - Snap Cart Admin</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Playfair+Display:wght@400;700&family=Montserrat:wght@300;400;500;600&display=swap" rel="stylesheet">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        :root {
            --primary: #2C3E50;
            --secondary: #fff;
            --accent: #87CEEB;
            --light: #f0f8ff;
            --dark: #2C3E50;
            --gray: #708090;
            --success: #28a745;
            --danger: #dc3545;
            --warning: #ffc107;
            --info: #17a2b8;
            --border: #e9ecef;
        }

        body {
            font-family: 'Montserrat', sans-serif;
            background: var(--light);
            color: var(--dark);
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }

        .header {
            background: var(--secondary);
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            margin-bottom: 30px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .header h1 {
            font-family: 'Playfair Display', serif;
            color: var(--primary);
        }

        .stats {
            display: flex;
            gap: 20px;
        }

        .stat-card {
            background: var(--secondary);
            padding: 15px;
            border-radius: 8px;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
            text-align: center;
            min-width: 120px;
        }

        .stat-number {
            font-size: 24px;
            font-weight: 600;
            color: var(--primary);
        }

        .stat-label {
            font-size: 12px;
            color: var(--gray);
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .applications-grid {
            display: grid;
            gap: 20px;
        }

        .application-card {
            background: var(--secondary);
            border-radius: 10px;
            padding: 20px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            border-left: 4px solid var(--info);
        }

        .application-card.pending {
            border-left-color: var(--warning);
        }

        .application-card.approved {
            border-left-color: var(--success);
        }

        .application-card.rejected {
            border-left-color: var(--danger);
        }

        .application-header {
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
            margin-bottom: 15px;
        }

        .applicant-info h3 {
            font-size: 18px;
            margin-bottom: 5px;
            color: var(--dark);
        }

        .applicant-details {
            font-size: 14px;
            color: var(--gray);
            margin-bottom: 10px;
        }

        .application-meta {
            display: flex;
            gap: 15px;
            font-size: 12px;
            color: var(--gray);
            margin-bottom: 15px;
        }

        .status-badge {
            padding: 4px 8px;
            border-radius: 12px;
            font-size: 11px;
            font-weight: 600;
            text-transform: uppercase;
        }

        .status-pending {
            background: #fff3cd;
            color: #856404;
        }

        .status-approved {
            background: #d4edda;
            color: #155724;
        }

        .status-rejected {
            background: #f8d7da;
            color: #721c24;
        }

        .business-info {
            margin-bottom: 15px;
        }

        .business-info h4 {
            font-size: 14px;
            margin-bottom: 8px;
            color: var(--dark);
        }

        .business-description {
            font-size: 14px;
            line-height: 1.5;
            color: var(--gray);
            margin-bottom: 8px;
        }

        .experience-level {
            font-size: 13px;
            color: var(--primary);
            font-weight: 500;
        }

        .application-actions {
            display: flex;
            gap: 10px;
            justify-content: flex-end;
        }

        .btn {
            padding: 8px 16px;
            border: none;
            border-radius: 6px;
            cursor: pointer;
            font-size: 14px;
            font-weight: 500;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 6px;
            transition: all 0.3s;
        }

        .btn-primary {
            background: var(--primary);
            color: var(--secondary);
        }

        .btn-primary:hover {
            background: #333;
        }

        .btn-success {
            background: var(--success);
            color: white;
        }

        .btn-success:hover {
            background: #218838;
        }

        .btn-danger {
            background: var(--danger);
            color: white;
        }

        .btn-danger:hover {
            background: #c82333;
        }

        .btn-secondary {
            background: var(--gray);
            color: white;
        }

        .btn-secondary:hover {
            background: #5a6268;
        }

        .review-notes {
            margin-top: 15px;
            padding: 10px;
            background: var(--light);
            border-radius: 6px;
            border-left: 3px solid var(--primary);
        }

        .review-notes h5 {
            font-size: 13px;
            margin-bottom: 5px;
            color: var(--dark);
        }

        .review-notes p {
            font-size: 13px;
            color: var(--gray);
            margin: 0;
        }

        .empty-state {
            text-align: center;
            padding: 60px 20px;
            background: var(--secondary);
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        }

        .empty-state i {
            font-size: 48px;
            color: var(--gray);
            margin-bottom: 20px;
        }

        .empty-state h3 {
            color: var(--dark);
            margin-bottom: 10px;
        }

        .empty-state p {
            color: var(--gray);
        }

        /* Search and Filter */
        .search-filter-section {
            background: var(--secondary);
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            margin-bottom: 30px;
            display: flex;
            gap: 20px;
            align-items: center;
            flex-wrap: wrap;
        }

        .search-container {
            position: relative;
            flex: 1;
            min-width: 300px;
        }

        .search-container i {
            position: absolute;
            left: 15px;
            top: 50%;
            transform: translateY(-50%);
            color: var(--gray);
        }

        .search-input {
            width: 100%;
            padding: 12px 15px 12px 45px;
            border: 1px solid #ddd;
            border-radius: 25px;
            font-size: 14px;
            font-family: 'Montserrat', sans-serif;
        }

        .search-input:focus {
            outline: none;
            border-color: var(--primary);
            box-shadow: 0 0 0 2px rgba(0, 0, 0, 0.1);
        }

        .filter-buttons {
            display: flex;
            gap: 10px;
            flex-wrap: wrap;
        }

        .filter-btn {
            padding: 8px 16px;
            border: 1px solid #ddd;
            background: var(--secondary);
            color: var(--gray);
            border-radius: 20px;
            cursor: pointer;
            font-size: 14px;
            font-weight: 500;
            transition: all 0.3s;
        }

        .filter-btn:hover {
            background: var(--light);
        }

        .filter-btn.active {
            background: var(--primary);
            color: var(--secondary);
            border-color: var(--primary);
        }

        .no-results {
            text-align: center;
            padding: 60px 20px;
            background: var(--secondary);
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            grid-column: 1 / -1;
        }

        .no-results i {
            font-size: 48px;
            color: var(--gray);
            margin-bottom: 20px;
        }

        .no-results h3 {
            color: var(--dark);
            margin-bottom: 10px;
        }

        .no-results p {
            color: var(--gray);
        }

        @media (max-width: 768px) {
            .header {
                flex-direction: column;
                gap: 20px;
                text-align: center;
            }

            .stats {
                justify-content: center;
            }

            .application-header {
                flex-direction: column;
                gap: 10px;
            }

            .application-actions {
                justify-content: center;
            }

            .search-filter-section {
                flex-direction: column;
                gap: 15px;
                align-items: stretch;
            }

            .search-container {
                min-width: auto;
            }

            .filter-buttons {
                justify-content: center;
            }

            .filter-btn {
                flex: 1;
                min-width: 80px;
                text-align: center;
            }
        }
    </style>
</head>
<body>
    <!-- Header -->
    <%- include('./partials/header') %>

    <div class="container">
        <div class="header">
            <h1>Seller Applications</h1>
            <div class="stats">
                <div class="stat-card">
                    <div class="stat-number"><%= applications.filter(app => app.status === 'pending').length %></div>
                    <div class="stat-label">Pending</div>
                </div>
                <div class="stat-card">
                    <div class="stat-number"><%= applications.filter(app => app.status === 'approved').length %></div>
                    <div class="stat-label">Approved</div>
                </div>
                <div class="stat-card">
                    <div class="stat-number"><%= applications.filter(app => app.status === 'rejected').length %></div>
                    <div class="stat-label">Rejected</div>
                </div>
                <div class="stat-card">
                    <div class="stat-number"><%= applications.length %></div>
                    <div class="stat-label">Total</div>
                </div>
            </div>
        </div>

        <% if (applications && applications.length > 0) { %>
            <!-- Search and Filter -->
            <div class="search-filter-section">
                <div class="search-container">
                    <i class="fas fa-search"></i>
                    <input type="text" id="applicationSearch" placeholder="Search by name, email, university, or shop name..." class="search-input">
                </div>
                <div class="filter-buttons">
                    <button class="filter-btn active" data-filter="all">All (<%= applications.length %>)</button>
                    <button class="filter-btn" data-filter="pending">Pending (<%= applications.filter(app => app.status === 'pending').length %>)</button>
                    <button class="filter-btn" data-filter="approved">Approved (<%= applications.filter(app => app.status === 'approved').length %>)</button>
                    <button class="filter-btn" data-filter="rejected">Rejected (<%= applications.filter(app => app.status === 'rejected').length %>)</button>
                </div>
            </div>

            <div class="applications-grid" id="applicationsGrid">
                <% applications.forEach(application => { %>
                    <div class="application-card <%= application.status %>">
                        <div class="application-header">
                            <div class="applicant-info">
                                <h3><%= application.name %></h3>
                                <div class="applicant-details">
                                    <div><i class="fas fa-envelope"></i> <%= application.email %></div>
                                    <div><i class="fas fa-phone"></i> <%= application.whatsapp %></div>
                                    <div><i class="fas fa-university"></i> <%= application.university ? application.university.replace(/-/g, ' ').replace(/\b\w/g, l => l.toUpperCase()) : 'Not specified' %></div>
                                </div>
                                <div class="application-meta">
                                    <span><i class="fas fa-calendar"></i> Applied: <%= new Date(application.appliedAt).toLocaleDateString() %></span>
                                    <span class="status-badge status-<%= application.status %>">
                                        <%= application.status.charAt(0).toUpperCase() + application.status.slice(1) %>
                                    </span>
                                </div>
                            </div>
                        </div>

                        <div class="business-info">
                            <h4>Business Information</h4>
                            <div class="business-description">
                                <%= application.businessDescription || 'No description provided' %>
                            </div>
                            <div class="experience-level">
                                <i class="fas fa-chart-line"></i>
                                Experience: <%= application.experience ? application.experience.charAt(0).toUpperCase() + application.experience.slice(1) : 'Not specified' %>
                            </div>
                        </div>

                        <% if (application.reviewedAt) { %>
                            <div class="review-notes">
                                <h5>Review Notes</h5>
                                <p><%= application.reviewNotes || 'No notes provided' %></p>
                                <small>Reviewed on <%= new Date(application.reviewedAt).toLocaleDateString() %></small>
                            </div>
                        <% } %>

                        <% if (application.status === 'pending') { %>
                            <div class="application-actions">
                                <button class="btn btn-success" onclick="reviewApplication('<%= application._id %>', 'approve')">
                                    <i class="fas fa-check"></i> Approve
                                </button>
                                <button class="btn btn-danger" onclick="reviewApplication('<%= application._id %>', 'reject')">
                                    <i class="fas fa-times"></i> Reject
                                </button>
                            </div>
                        <% } else if (application.status === 'approved') { %>
                            <div class="application-actions">
                                <button class="btn btn-warning" onclick="unapproveApplication('<%= application._id %>')">
                                    <i class="fas fa-undo"></i> Unapprove
                                </button>
                            </div>
                        <% } %>
                    </div>
                <% }); %>
            </div>
        <% } else { %>
            <div class="empty-state">
                <i class="fas fa-clipboard-list"></i>
                <h3>No Applications Yet</h3>
                <p>When users apply to become sellers, their applications will appear here for review.</p>
            </div>
        <% } %>
    </div>

    <!-- Review Modal -->
    <div id="reviewModal" class="modal" style="display: none;">
        <div class="modal-content" style="max-width: 500px;">
            <div class="modal-header">
                <h3 id="modalTitle">Review Application</h3>
                <button class="modal-close" onclick="closeReviewModal()">&times;</button>
            </div>
            <div class="modal-body" style="padding: 20px;">
                <form id="reviewForm">
                    <div style="margin-bottom: 15px;">
                        <label for="reviewNotes" style="display: block; margin-bottom: 5px; font-weight: 500;">Review Notes (Optional)</label>
                        <textarea id="reviewNotes" name="notes" rows="4" placeholder="Add any notes about this application..." style="width: 100%; padding: 10px; border: 1px solid var(--border); border-radius: 6px; font-family: inherit;"></textarea>
                    </div>
                    <div style="display: flex; gap: 10px; justify-content: flex-end;">
                        <button type="button" class="btn btn-secondary" onclick="closeReviewModal()">Cancel</button>
                        <button type="submit" class="btn" id="submitBtn">Submit</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <script>
        let currentApplicationId = null;
        let currentAction = null;

        function reviewApplication(applicationId, action) {
            currentApplicationId = applicationId;
            currentAction = action;

            const modal = document.getElementById('reviewModal');
            const modalTitle = document.getElementById('modalTitle');
            const submitBtn = document.getElementById('submitBtn');

            if (action === 'approve') {
                modalTitle.textContent = 'Approve Application';
                submitBtn.textContent = 'Approve';
                submitBtn.className = 'btn btn-success';
            } else {
                modalTitle.textContent = 'Reject Application';
                submitBtn.textContent = 'Reject';
                submitBtn.className = 'btn btn-danger';
            }

            modal.style.display = 'flex';
        }

        function closeReviewModal() {
            document.getElementById('reviewModal').style.display = 'none';
            document.getElementById('reviewForm').reset();
            currentApplicationId = null;
            currentAction = null;
        }

        async function unapproveApplication(applicationId) {
            if (!confirm('Are you sure you want to unapprove this seller? They will lose their selling privileges.')) {
                return;
            }

            try {
                const response = await fetch(`/admin/applications/${applicationId}/unapprove`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ notes: 'Seller unapproved by admin' })
                });

                const data = await response.json();

                if (data.success) {
                    location.reload(); // Refresh to show updated status
                } else {
                    alert(data.error || 'Failed to unapprove seller');
                }
            } catch (error) {
                console.error('Error unapproving seller:', error);
                alert('Failed to unapprove seller. Please try again.');
            }
        }

        document.getElementById('reviewForm').addEventListener('submit', async function(e) {
            e.preventDefault();

            const notes = document.getElementById('reviewNotes').value;

            try {
                const response = await fetch(`/admin/applications/${currentApplicationId}/${currentAction}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ notes })
                });

                const data = await response.json();

                if (data.success) {
                    closeReviewModal();
                    location.reload(); // Refresh to show updated status
                } else {
                    alert(data.error || 'Failed to process application');
                }
            } catch (error) {
                console.error('Error processing application:', error);
                alert('Failed to process application. Please try again.');
            }
        });

        // Close modal when clicking outside
        document.getElementById('reviewModal').addEventListener('click', function(e) {
            if (e.target === this) {
                closeReviewModal();
            }
        });

        // Search and Filter Functionality
        let allApplications = [];
        let currentFilter = 'all';

        // Initialize applications data
        document.addEventListener('DOMContentLoaded', function() {
            const applicationCards = document.querySelectorAll('.application-card');
            allApplications = Array.from(applicationCards).map(card => ({
                element: card,
                name: card.querySelector('h3').textContent.toLowerCase(),
                email: card.querySelector('.applicant-details div:nth-child(1)').textContent.toLowerCase(),
                university: card.querySelector('.applicant-details div:nth-child(3)').textContent.toLowerCase(),
                shopName: card.querySelector('.business-description') ? card.querySelector('.business-description').textContent.toLowerCase() : '',
                status: card.className.split(' ').find(cls => cls.startsWith('status-')).replace('status-', '')
            }));

            // Search functionality
            const searchInput = document.getElementById('applicationSearch');
            searchInput.addEventListener('input', function() {
                filterApplications();
            });

            // Filter button functionality
            const filterButtons = document.querySelectorAll('.filter-btn');
            filterButtons.forEach(button => {
                button.addEventListener('click', function() {
                    // Update active button
                    filterButtons.forEach(btn => btn.classList.remove('active'));
                    this.classList.add('active');

                    // Update current filter
                    currentFilter = this.dataset.filter;
                    filterApplications();
                });
            });
        });

        function filterApplications() {
            const searchTerm = document.getElementById('applicationSearch').value.toLowerCase();
            const applicationsGrid = document.getElementById('applicationsGrid');
            let visibleCount = 0;

            // Remove existing no-results message
            const existingNoResults = applicationsGrid.querySelector('.no-results');
            if (existingNoResults) {
                existingNoResults.remove();
            }

            allApplications.forEach(app => {
                let isVisible = true;

                // Status filter
                if (currentFilter !== 'all' && app.status !== currentFilter) {
                    isVisible = false;
                }

                // Search filter
                if (searchTerm && isVisible) {
                    const searchableText = `${app.name} ${app.email} ${app.university} ${app.shopName}`;
                    if (!searchableText.includes(searchTerm)) {
                        isVisible = false;
                    }
                }

                // Show/hide application
                if (isVisible) {
                    app.element.style.display = 'block';
                    visibleCount++;
                } else {
                    app.element.style.display = 'none';
                }
            });

            // Show no results message if no applications are visible
            if (visibleCount === 0) {
                const noResults = document.createElement('div');
                noResults.className = 'no-results';
                noResults.innerHTML = `
                    <i class="fas fa-search"></i>
                    <h3>No applications found</h3>
                    <p>Try adjusting your search terms or filter criteria.</p>
                `;
                applicationsGrid.appendChild(noResults);
            }
        }
    </script>
</body>
</html>